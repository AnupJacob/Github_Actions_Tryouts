name: Label Draft PRs Test

on: 
  [push, workflow_dispatch]

jobs:
  label-draft-pr:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch open pull requests
        id: fetch_prs
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/pulls
          query: |
            state=open
            per_page=100

      - name: Save PR data to file
        run: |
          echo '${{ steps.fetch_prs.outputs.data }}' > pr_data.json

      - name: Label or unlabel draft pull requests
        run: |
          # Iterate through each PR and check if it's draft
          for pr in $(jq -r '.[] | .number' pr_data.json); do
            is_draft=$(jq -r ".[] | select(.number == $pr) | .draft" pr_data.json)
            has_draft_label=$(gh pr view "$pr" --json labels --jq '.labels | map(.name) | contains(["draft"])')

            # If PR is a draft and doesn't have "draft" label, add it
            if [[ "$is_draft" == "true" && "$has_draft_label" == "false" ]]; then
              echo "Adding 'draft' label to PR #$pr"
              gh pr edit "$pr" --add-label "draft" --repo "${{ github.repository }}"

            # If PR is not a draft but has the "draft" label, remove it
            elif [[ "$is_draft" == "false" && "$has_draft_label" == "true" ]]; then
              echo "Removing 'draft' label from PR #$pr"
              gh pr edit "$pr" --remove-label "draft" --repo "${{ github.repository }}"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
